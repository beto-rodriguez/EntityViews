namespace EntityViews.SourceGenerators.Templates.Maui;

public class _MauiDefaultInputs
{
    public static string OnErrorBackgroundColor = "Color.FromRgba(255, 0, 0, 50)";
    public static string OnErrorTextColor = "Color.FromRgba(255, 0, 0, 255)";

    public static string Build()
    {
        return @$"// <auto-generated/>
#nullable enable

namespace EntityViews.Input;

/// <summary>
/// Defines a control for EntityViews.
/// </summary>
public interface IEntityViewsInput<T>
{{
    /// <summary>
    /// Gets the label to display the property name, if null, the display label must be defined in the
    /// <see cref=""IEntityViewsInput{{T}}.Initialized""/> method.
    /// </summary>
    Label? Label {{ get; }}

    /// <summary>
    /// Gets the input to bind to the property value, if null, the input must be defined in the
    /// <see cref=""IEntityViewsInput{{T}}.Initialized""/> method.
    /// </summary>
    T? Input {{ get; }}

    /// <summary>
    /// Gets the label to display validation errors, if null, the validation label must be defined in the
    /// <see cref=""IEntityViewsInput{{T}}.Initialized""/> method.
    /// </summary>
    Label? ValidationLabel {{ get; }}

    void Initialized(string propertyName, string? displayName);
}}

// The interface implementation is irrelevant in this case,
// the source generator will use the properties defined in this interface,
// but it only uses the property names as strings.
// this is just an example of how the interface could be implemented
// (please do not use the base ctor as in this example, instead set the InputType property explicitly as the docs state).
public abstract class EntityViewsInput<T> : VerticalStackLayout, IEntityViewsInput<T>
    where T : View, new()
{{
    public EntityViewsInput()
    {{
        var label = new Label();
        var input = new T();
        var validationLabel = new Label();

        Children.Add(label);
        Children.Add(input);
        Children.Add(validationLabel);

        Label = label;
        Input = input;
        ValidationLabel = validationLabel;
    }}

    public Label? Label {{ get; }}

    public T? Input {{ get; }}

    public Label? ValidationLabel {{ get; }}

    public virtual void Initialized(string propertyName, string? displayName)
    {{  }}
}}

public class EntityViewsTextInput : EntityViewsInput<Entry> {{ }}

public class EntityViewsTextAreaInput : EntityViewsInput<Editor> {{ }}

public class EntityViewsNumberInput : EntityViewsInput<Entry> {{ }}

public class EntityViewsSwitchInput : EntityViewsInput<Switch> {{ }}

public class EntityViewsCheckBoxInput : EntityViewsInput<CheckBox> {{ }}

public class EntityViewsDatePickerInput : EntityViewsInput<DatePicker> {{ }}

public class EntityViewsTimePickerInput : EntityViewsInput<TimePicker> {{ }}

public class EntityViewsSliderInput : EntityViewsInput<Slider> {{ }}

public class EntityViewsStepperInput : EntityViewsInput<Stepper> {{ }}
";
    }
}
