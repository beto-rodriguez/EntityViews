using EntityViews.SourceGenerators.FormsGeneration;

namespace EntityViews.SourceGenerators.Templates.Maui;

public class MauiNumericEntryPropertyTemplate
{
    public static string Build(InputTemplateParams p)
    {
        return @$"// <auto-generated/>
#nullable enable

{MauiGenerator.GetUsingStatements(p)}

namespace {p.FormNamespace};

public class {p.Property.Name}Input : {p.BaseControlClassName ?? "EntityViews.Input.EntityViewsNumberInput"}
{{
    public {p.Property.Name}Input()
    {{
        Input{MauiGenerator.GetBindingExpression("Entry.TextProperty", p)}

        Initialized(""{p.Property.Name}"", {p.PropertyDisplaySource});
    }}

    protected override void OnValidating(ValidableViewModel vm, ValidatingEventArgs args)
    {{
        if (Input is null) return;
        if (args.PropertyName is not null && args.PropertyName != _propertyName) return;
        if (string.IsNullOrWhiteSpace(Input.Text)) return;
        if (!{p.Property.Type.Name}.TryParse(Input.Text, out _))
            vm.AddValidationError(
                ""{p.Property.Name}"",
                string.Format(SpecialValidationMessages.ValidNumber, Input.Text, ""{p.Property.Name}""));

        base.OnValidating(vm, args);
    }}
}}
";
    }
}
