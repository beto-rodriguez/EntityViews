namespace EntityViews.SourceGenerators.Templates.Maui;

public class MauiSwitchPropertyTemplate
{
    public static string Build(InputTemplateParams p)
    {
        var property = p.Property;
        var viewModelName = p.ViewModelName;
        var viewModelNamespace = p.ViewModelNamespace;
        var formNamespace = p.FormNamespace;
        var propertyDisplaySource = p.PropertyDisplaySource;

        return @$"// <auto-generated/>
#nullable enable

using CommunityToolkit.Maui.Markup;
using {viewModelNamespace};

namespace {formNamespace};

public class {property.Name}Input : {p.BaseControlClassName ?? "EntityViews.Input.EntityViewsSwitchInput"}
{{
    public {property.Name}Input()
    {{
        if (Input is not null)
            Input
                .Bind(
                    Switch.IsToggledProperty,
                    getter: static ({viewModelName} vm) => vm.{property.Name},
                    setter: static ({viewModelName} vm, bool value) => vm.{property.Name} = value);

        _label.IsVisible = false;
        InputBackgroundColor = Colors.Transparent;

        Initialized(""{property.Name}"", {propertyDisplaySource});
    }}
}}
";
    }
}
