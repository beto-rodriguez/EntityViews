namespace EntityViews.SourceGenerators.Templates.Maui;

public class MauiCheckboxPropertyTemplate
{
    public static string Build(InputTemplateParams p)
    {
        var property = p.Property;
        var viewModelName = p.ViewModelName;
        var viewModelNamespace = p.ViewModelNamespace;
        var formNamespace = p.FormNamespace;
        var propertyDisplaySource = p.PropertyDisplaySource;

        return @$"// <auto-generated/>
#nullable enable

using CommunityToolkit.Maui.Markup;
using {viewModelNamespace};

namespace {formNamespace};

public class {property.Name}Input : {p.BaseControlClassName ?? "EntityViews.Input.EntityViewsCheckBoxInput"}
{{
    public {property.Name}Input()
    {{
        Input
            .Bind(
                CheckBox.IsCheckedProperty,
                getter: static ({viewModelName} vm) => vm.{property.Name},
                setter: static ({viewModelName} vm, bool value) => vm.{property.Name} = value);

        Input.Margin = new(7, 0, 7, 0);
        InputBackgroundColor = Colors.Transparent;
        _label.TranslationX = 30;
        AbsoluteLayout.SetLayoutBounds(Input, new(0, 1, 1, 1));

        Initialized(""{property.Name}"", {propertyDisplaySource});
    }}
}}
";
    }
}
